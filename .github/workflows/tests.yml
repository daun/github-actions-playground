name: Tests

on:
  push:
    branches: [ main, master, next ]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:

    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up node
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Get npm cache directory
      id: npm-cache-dir
      shell: bash
      run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

    - name: Cache npm dependencies
      uses: actions/cache@v3
      id: npm-cache
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Get Playwright version
      id: playwright-version
      shell: bash
      run: echo "version=$(node -e "console.log(require('./package-lock.json').packages['node_modules/@playwright/test'].version)")" >> ${GITHUB_OUTPUT}

    - name: Cache playwright binaries
      uses: actions/cache@v3
      id: playwright-cache
      with:
        path: |
          ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}

    - name: Install dependencies
      run: npm ci
      # if: steps.npm-cache.outputs.cache-hit != 'true'

    - name: Install Playwright binaries
      run: npx playwright install --with-deps
      if: steps.playwright-cache.outputs.cache-hit != 'true'

    - name: Bundle library
      run: npm run build

    - name: Run tests
      run: npm run test

    - name: Upload test report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: tests/reports/
        retention-days: 14

    - name: Upload test resulsts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-results
        path: tests/results/
        retention-days: 14
