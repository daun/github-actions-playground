name: Tests

on:
  push:
    branches: [ main, master, next ]
  pull_request:
    branches-ignore: [ reports ]
  workflow_dispatch:

concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Bundle library
        run: npm run build

      - name: Upload dist folder
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: dist-folder
          path: dist
          retention-days: 1

  test:
    name: Run playwright tests (${{ matrix.shard }})
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.38.0
    timeout-minutes: 20
    needs: install
    strategy:
      fail-fast: false
      matrix:
        shard: [1/2, 2/2]
        # project: [chromium, firefox, webkit]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Get playwright version
        id: playwright-version
        run: echo "version=$(cat ./package-lock.json | jq -re '.packages["node_modules/@playwright/test"].version')" >> $GITHUB_OUTPUT

      - name: Download dist folder
        uses: actions/download-artifact@v3
        with:
          name: dist-folder
          path: dist

      - name: Run tests
        run: npx playwright test --config ./tests/config/playwright.config.ts --shard ${{ matrix.shard }} # --workers 1

      - name: Upload blob report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: blob-reports
          path: tests/reports/blobs
          retention-days: 1

  report:
    name: Create report
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: test
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Download blob reports
        uses: actions/download-artifact@v3
        with:
          name: blob-reports
          path: playwright-blob-reports

      - name: Merge blob reports
        run: PLAYWRIGHT_JSON_OUTPUT_NAME=results.json npx playwright merge-reports --reporter html,json ./playwright-blob-reports

      - name: Upload HTML report
        uses: actions/upload-artifact@v3
        with:
          name: html-report # --attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 14

      - name: Check out reports branch
        uses: actions/checkout@v4
        with:
          ref: reports
          path: reports-branch
          fetch-depth: 0

      - name: Generate report name and URL
        id: report-id
        run: |
          name=$(date +"%Y-%m-%d-%H-%M-%S")
          echo "name=$name" >> $GITHUB_OUTPUT
          echo "path=reports/$name" >> $GITHUB_OUTPUT
          echo "url=https://github-playground-test-reports.netlify.app/reports/$name/" >> $GITHUB_OUTPUT

      - name: Copy html report and push reports branch
        run: |
          cp -r playwright-report reports-branch/reports/${{ steps.report-id.outputs.name }}
          cd reports-branch
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add reports
          git commit -m "Add test report for run ${{ github.run_id }} (attempt: ${{ github.run_attempt }})"
          while true; do
            git pull --rebase
            if [ $? -ne 0 ]; then
              echo "Failed to rebase. Please review manually."
              exit 1
            fi
            git push
            if [ $? -eq 0 ]; then
              echo "Successfully pushed HTML report to repo."
              exit 0
            fi
          done

      - name: Output report url
        run: |
          echo "::notice title=Published Playwright test report::${{ steps.report-id.outputs.url }}"

      - name: Create report comment
        id: report-summary
        uses: daun/playwright-report-summary@v2.1.0
        with:
          report-file: results.json
          report-url: ${{ steps.report-id.outputs.url }}
          job-summary: true

      # - name: Create report comment
      #   uses: ./.github/actions/playwright-report-comment
      #   with:
      #     report-file: results.json
